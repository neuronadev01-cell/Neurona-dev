version: '3.8'

services:
  # Neurona Full-Stack Application
  neurona-app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: neurona-app
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3000
      
      # Database Configuration
      DATABASE_URL: postgresql://neurona_user:${POSTGRES_PASSWORD:-neurona_password_dev}@postgres:5432/neurona?sslmode=disable
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: neurona
      DB_USER: neurona_user
      DB_PASSWORD: ${POSTGRES_PASSWORD:-neurona_password_dev}
      
      # Redis Configuration
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_password_dev}@redis:6379
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redis_password_dev}
      
      # Authentication
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-key-for-development}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-your-nextauth-secret}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      
      # Email Configuration (Resend)
      RESEND_API_KEY: ${RESEND_API_KEY}
      FROM_EMAIL: ${FROM_EMAIL:-noreply@neurona.health}
      
      # Video Consultation
      VIDEO_API_KEY: ${VIDEO_API_KEY}
      VIDEO_API_SECRET: ${VIDEO_API_SECRET}
      VIDEO_SESSION_TIMEOUT: ${VIDEO_SESSION_TIMEOUT:-3600000}
      VIDEO_RECORDING_ENABLED: ${VIDEO_RECORDING_ENABLED:-true}
      
      # File Upload
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-10485760}
      UPLOAD_PATH: /app/uploads
      
      # Security
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
      
      # Crisis Management
      CRISIS_ALERT_EMAIL: ${CRISIS_ALERT_EMAIL:-crisis@neurona.health}
      CRISIS_SMS_ENABLED: ${CRISIS_SMS_ENABLED:-false}
      
      # Analytics
      ANALYTICS_ENABLED: ${ANALYTICS_ENABLED:-true}
      
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
      
    volumes:
      - app_uploads:/app/uploads
      - app_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - neurona-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: neurona-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: neurona
      POSTGRES_USER: neurona_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-neurona_password_dev}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - neurona-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U neurona_user -d neurona"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for Caching and Sessions
  redis:
    image: redis:7-alpine
    container_name: neurona-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password_dev} --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - neurona-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # pgAdmin for Database Management (Optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: neurona-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@neurona.health}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin_password_dev}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - neurona-network
    profiles:
      - tools

  # Redis Commander for Redis Management (Optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: neurona-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:0:${REDIS_PASSWORD:-redis_password_dev}
      HTTP_USER: ${REDIS_COMMANDER_USER:-admin}
      HTTP_PASSWORD: ${REDIS_COMMANDER_PASSWORD:-admin_password_dev}
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - neurona-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  app_uploads:
    driver: local
  app_logs:
    driver: local

networks:
  neurona-network:
    driver: bridge
